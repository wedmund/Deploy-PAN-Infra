{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT)"
            },
            "defaultValue": "0.0.0.0/0"
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            },
            "defaultValue": "VM-Series"
        },
        "imageVersion": {
            "type": "string",
            "allowedValues": [
                "latest",
                "9.1.2"
            ],
            "metadata": {
                "description": "Version number of VM-Series VM in the Azure portal"
            },
            "defaultValue": "latest"
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            },
            "defaultValue": "Standard_DS3_v2"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Virtual Network (VNET)"
            },
            "defaultValue": "fwVNET"
        },
        "vnetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Use new or existing VNET"
            }
        },
        "virtualNetworkAddressPrefixes": {
            "type": "array",
            "defaultValue": "[array('10.150.0.0/24')]",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "virtualNetworkExistingRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of resource group of existing VNET (if applicable)"
            }
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "Mgmt",
            "metadata": {
                "description": "Subnet for Management"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Public",
            "metadata": {
                "description": "Subnet for Public"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "AzureSubscription",
            "metadata": {
                "description": "Subnet for internal traffic between subnets and subscriptions"
            }
        },
        "subnet3Name": {
            "type": "string",
            "defaultValue": "CPADC",
            "metadata": {
                "description": "Subnet for internal traffic between azure and on-premise."
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "10.150.0.0/27",
            "metadata": {
                "description": "Mgmt subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.150.0.160/27",
            "metadata": {
                "description": "Public subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "10.150.0.32/27",
            "metadata": {
                "description": "Azure Subscription subnet CIDR"
            }
        },
        "subnet3Prefix": {
            "type": "string",
            "defaultValue": "10.150.0.64/27",
            "metadata": {
                "description": "CPA DC subnet for internal traffic between azure and on-premise"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "defaultValue": "10.150.0.161",
            "metadata": {
                "description": "Public subnet start address"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "defaultValue": "10.150.0.33",
            "metadata": {
                "description": "Azure Subscription subnet start address"
            }
        },
        "subnet3StartAddress": {
            "type": "string",
            "defaultValue": "10.150.0.65",
            "metadata": {
                "description": "CPA DC Subnet start address"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the administrator account of VM-Series"
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "Password or ssh key for the administrator account of VM-Series."
            }
        },
        "publicIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Public IP for mgmt interface is new or existing"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "metadata": {
                "description": "Name of existing public IP resource"
            }
        },
        "publicIPRGName": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "description": "Name of existing public IP resource group"
            }
        },
        "publicIPAllocationMethod": {
            "type": "string",
            "defaultValue": "Static",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "Allocation method of public IP resource"
            }
        },
        "AvailSetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Availability Set Name for Virtual Machine"
            }
        }
    },
    "functions": [],
    "variables": {
        "imagePublisher": "paloaltonetworks",
        "imageSku": "byol",
        "imageOffer": "vmseries-flex",
        "availabilitySetName": "[parameters('AvailSetName')]",
        "nsgName": "MgmtNSG",
        "virtualNetworkAddressPrefix": "[parameters('virtualNetworkAddressPrefixes')[0]]",
        "nicName": "[concat(parameters('vmName'), '-', parameters('publicIPAddressName'), '-eth')]",
        "existingVnetID": "[resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
        "existingSubnet0Ref": "[concat(variables('existingVnetID'),'/subnets/',parameters('subnet0Name'))]",
        "existingSubnet1Ref": "[concat(variables('existingVnetID'),'/subnets/',parameters('subnet1Name'))]",
        "existingSubnet2Ref": "[concat(variables('existingVnetID'),'/subnets/',parameters('subnet2Name'))]",
        "existingSubnet3Ref": "[concat(variables('existingVnetID'),'/subnets/',parameters('subnet3Name'))]",
        "newVnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "newSubnet0Ref": "[concat(variables('newVnetID'),'/subnets/',parameters('subnet0Name'))]",
        "newSubnet1Ref": "[concat(variables('newVnetID'),'/subnets/',parameters('subnet1Name'))]",
        "newSubnet2Ref": "[concat(variables('newVnetID'),'/subnets/',parameters('subnet2Name'))]",
        "newSubnet3Ref": "[concat(variables('newVnetID'),'/subnets/',parameters('subnet3Name'))]",
        "subnet0Ref": "[if(equals(parameters('vnetNewOrExisting'),'new'), variables('newSubnet0Ref'), variables('existingSubnet0Ref'))]",
        "subnet1Ref": "[if(equals(parameters('vnetNewOrExisting'),'new'), variables('newSubnet1Ref'), variables('existingSubnet1Ref'))]",
        "subnet2Ref": "[if(equals(parameters('vnetNewOrExisting'),'new'), variables('newSubnet2Ref'), variables('existingSubnet2Ref'))]",
        "subnet3Ref": "[if(equals(parameters('vnetNewOrExisting'),'new'), variables('newSubnet3Ref'), variables('existingSubnet3Ref'))]",
        "subnets": [
            {
                "name": "[parameters('subnet0Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet0Prefix')]",
                    "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                    }
                }
            },
            {
                "name": "[parameters('subnet1Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet1Prefix')]"
                }
            },
            {
                "name": "[parameters('subnet2Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet2Prefix')]"
                }
            },
            {
                "name": "[parameters('subnet3Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet3Prefix')]"
                }
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "name": "[parameters('publicIPAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "condition": "[equals(parameters('publicIPNewOrExisting'), 'new')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIPAddressName')]"
                }
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[variables('virtualNetworkAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-10-01",
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": "[variables('subnets')]"
            }
        },
        {
            "name": "[concat(variables('nicName'), '0')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-mgmt",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[if(equals(parameters('publicIPNewOrExisting'), 'existing'), resourceId(parameters('publicIPRGName'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName')), resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName')))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet0Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('nicName'), '1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[if(equals(parameters('imageVersion'), '8.1.9'), 'false', 'true')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig-untrust",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet1StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('nicName'), '2')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[if(equals(parameters('imageVersion'), '8.1.9'), 'false', 'true')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig-trust",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet2StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('nicName'), '3')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[if(equals(parameters('imageVersion'), '8.1.9'), 'false', 'true')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig-cpadc",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet3StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[concat(variables('nicName'), '0')]",
                "[concat(variables('nicName'), '1')]",
                "[concat(variables('nicName'), '2')]",
                "[concat(variables('nicName'), '3')]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
            ],
            "location": "[parameters('location')]",
            "plan": {
                "name": "[variables('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'3'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}